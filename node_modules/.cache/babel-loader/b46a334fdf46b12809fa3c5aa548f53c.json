{"ast":null,"code":"var _jsxFileName = \"/Users/amirarif/Documents/javascript/reactjs/udemy/react-the-complete-guide-incl-redux/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: 'e1',\n  title: 'Python',\n  amount: 40.9,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e2',\n  title: 'Go',\n  amount: 30.9,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e3',\n  title: 'React',\n  amount: 60.9,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'Django',\n  amount: 80.9,\n  date: new Date(2021, 2, 28)\n}];\n\nconst App = () => {\n  _s();\n\n  // initialize the state with dummy data\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    // update the expenses array but this is not the correct way to update the state\n    setExpenses([expense, ...expenses]); // use this way\n    // setExpenses((prevExpenses) => {\n    //   return [expense, ...prevExpenses];\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vWte2SAXNm+1bDonaLQzZSzOmNc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amirarif/Documents/javascript/reactjs/udemy/react-the-complete-guide-incl-redux/01-starting-setup/src/App.js"],"names":["React","useState","Expenses","NewExpense","DUMMY_EXPENSES","id","title","amount","date","Date","App","expenses","setExpenses","addExpenseHandler","expense"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAGA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADqB,EAOrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAPqB,EAarB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAbqB,EAmBrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAnBqB,CAAvB;;AA2BA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,cAAD,CAAxC;;AAEA,QAAMS,iBAAiB,GAAIC,OAAD,IAAa;AACrC;AACAF,IAAAA,WAAW,CAAC,CAACE,OAAD,EAAU,GAAGH,QAAb,CAAD,CAAX,CAFqC,CAIrC;AACA;AACA;AACA;AAED,GATD;;AAYA,sBACE;AAAA,4BACA,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;GAAMD,G;;KAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Python',\n    amount: 40.9,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: 'e2',\n    title: 'Go',\n    amount: 30.9,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: 'e3',\n    title: 'React',\n    amount: 60.9,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: 'e4',\n    title: 'Django',\n    amount: 80.9,\n    date: new Date(2021, 2, 28)\n  }\n];\n\nconst App = () => {\n  \n  // initialize the state with dummy data\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    // update the expenses array but this is not the correct way to update the state\n    setExpenses([expense, ...expenses]);\n\n    // use this way\n    // setExpenses((prevExpenses) => {\n    //   return [expense, ...prevExpenses];\n    // });\n  \n  };\n\n\n  return (\n    <div>\n    <NewExpense onAddExpense={addExpenseHandler}/>\n    <Expenses items= {expenses} />\n    </div>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}