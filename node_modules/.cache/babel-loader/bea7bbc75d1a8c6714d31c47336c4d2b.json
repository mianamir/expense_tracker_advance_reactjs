{"ast":null,"code":"var _jsxFileName = \"/Users/amirarif/Documents/javascript/reactjs/udemy/react-the-complete-guide-incl-redux/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // combine the these multiple states\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // }); \n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value\n    // })\n    // while updating multiple states use this method \n    // this is is saver way for updating the state in React \n    // because React schedule the state \n    // If your state update depends on the previous state use this func form!\n    // setUserInput((prevState) => {\n    //     return {...prevState, enteredTitle: event.target.value}\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    // })\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value\n    // })\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); // gather the form data\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    }; // console.log(expenseData);\n    // call the props from parent props function here\n    // in this way, we can communicate between components as well as communicate up\n    // in this way child component communicate with parent component\n\n    props.onSaveExpenseData(expenseData); // now clear the enter value after form submit\n    // key concept in the React i.e Two way binding\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/amirarif/Documents/javascript/reactjs/udemy/react-the-complete-guide-incl-redux/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    // combine the these multiple states\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // }); \n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitle: event.target.value\n        // })\n\n        // while updating multiple states use this method \n        // this is is saver way for updating the state in React \n        // because React schedule the state \n        // If your state update depends on the previous state use this func form!\n        // setUserInput((prevState) => {\n        //     return {...prevState, enteredTitle: event.target.value}\n        // });\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmount: event.target.value\n        // })\n    };\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate: event.target.value\n        // })\n    };\n\n    const submitHandler = (event) => {\n\n        event.preventDefault();\n\n        // gather the form data\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        };\n        // console.log(expenseData);\n\n\n        // call the props from parent props function here\n        // in this way, we can communicate between components as well as communicate up\n        // in this way child component communicate with parent component\n        props.onSaveExpenseData(expenseData);\n\n        // now clear the enter value after form submit\n        // key concept in the React i.e Two way binding\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n    };\n\n\n    return (\n    <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n\n        <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />    \n        </div>\n        <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />    \n        </div>  \n        <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />    \n        </div>\n\n        </div>\n\n        <div className=\"new-expense__actions\">\n            <button type=\"submit\">Add Expense</button>\n        </div>\n\n    </form>\n    );\n};\n\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}